{"mappings":"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","sources":["../../lib/targets/esp8266.js"],"sourcesContent":["import { ROM } from \"./rom.js\";\r\nexport class ESP8266ROM extends ROM {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.CHIP_NAME = \"ESP8266\";\r\n        this.CHIP_DETECT_MAGIC_VALUE = [0xfff0c101];\r\n        this.EFUSE_RD_REG_BASE = 0x3ff00050;\r\n        this.UART_CLKDIV_REG = 0x60000014;\r\n        this.UART_CLKDIV_MASK = 0xfffff;\r\n        this.XTAL_CLK_DIVIDER = 2;\r\n        this.FLASH_WRITE_SIZE = 0x4000;\r\n        // NOT IMPLEMENTED, SETTING EMPTY VALUE\r\n        this.BOOTLOADER_FLASH_OFFSET = 0;\r\n        this.UART_DATE_REG_ADDR = 0;\r\n        this.FLASH_SIZES = {\r\n            \"512KB\": 0x00,\r\n            \"256KB\": 0x10,\r\n            \"1MB\": 0x20,\r\n            \"2MB\": 0x30,\r\n            \"4MB\": 0x40,\r\n            \"2MB-c1\": 0x50,\r\n            \"4MB-c1\": 0x60,\r\n            \"8MB\": 0x80,\r\n            \"16MB\": 0x90,\r\n        };\r\n        this.SPI_REG_BASE = 0x60000200;\r\n        this.SPI_USR_OFFS = 0x1c;\r\n        this.SPI_USR1_OFFS = 0x20;\r\n        this.SPI_USR2_OFFS = 0x24;\r\n        this.SPI_MOSI_DLEN_OFFS = 0; // not in esp8266\r\n        this.SPI_MISO_DLEN_OFFS = 0; // not in esp8266\r\n        this.SPI_W0_OFFS = 0x40;\r\n        this.getChipFeatures = async (loader) => {\r\n            const features = [\"WiFi\"];\r\n            if ((await this.getChipDescription(loader)) == \"ESP8285\")\r\n                features.push(\"Embedded Flash\");\r\n            return features;\r\n        };\r\n    }\r\n    async readEfuse(loader, offset) {\r\n        const addr = this.EFUSE_RD_REG_BASE + 4 * offset;\r\n        loader.debug(\"Read efuse \" + addr);\r\n        return await loader.readReg(addr);\r\n    }\r\n    async getChipDescription(loader) {\r\n        const efuse3 = await this.readEfuse(loader, 2);\r\n        const efuse0 = await this.readEfuse(loader, 0);\r\n        const is8285 = ((efuse0 & (1 << 4)) | (efuse3 & (1 << 16))) != 0; // One or the other efuse bit is set for ESP8285\r\n        return is8285 ? \"ESP8285\" : \"ESP8266EX\";\r\n    }\r\n    async getCrystalFreq(loader) {\r\n        const uartDiv = (await loader.readReg(this.UART_CLKDIV_REG)) & this.UART_CLKDIV_MASK;\r\n        const etsXtal = (loader.transport.baudrate * uartDiv) / 1000000 / this.XTAL_CLK_DIVIDER;\r\n        let normXtal;\r\n        if (etsXtal > 33) {\r\n            normXtal = 40;\r\n        }\r\n        else {\r\n            normXtal = 26;\r\n        }\r\n        if (Math.abs(normXtal - etsXtal) > 1) {\r\n            loader.info(\"WARNING: Detected crystal freq \" +\r\n                etsXtal +\r\n                \"MHz is quite different to normalized freq \" +\r\n                normXtal +\r\n                \"MHz. Unsupported crystal in use?\");\r\n        }\r\n        return normXtal;\r\n    }\r\n    _d2h(d) {\r\n        const h = (+d).toString(16);\r\n        return h.length === 1 ? \"0\" + h : h;\r\n    }\r\n    async readMac(loader) {\r\n        let mac0 = await this.readEfuse(loader, 0);\r\n        mac0 = mac0 >>> 0;\r\n        let mac1 = await this.readEfuse(loader, 1);\r\n        mac1 = mac1 >>> 0;\r\n        let mac3 = await this.readEfuse(loader, 3);\r\n        mac3 = mac3 >>> 0;\r\n        const mac = new Uint8Array(6);\r\n        if (mac3 != 0) {\r\n            mac[0] = (mac3 >> 16) & 0xff;\r\n            mac[1] = (mac3 >> 8) & 0xff;\r\n            mac[2] = mac3 & 0xff;\r\n        }\r\n        else if (((mac1 >> 16) & 0xff) == 0) {\r\n            mac[0] = 0x18;\r\n            mac[1] = 0xfe;\r\n            mac[2] = 0x34;\r\n        }\r\n        else if (((mac1 >> 16) & 0xff) == 1) {\r\n            mac[0] = 0xac;\r\n            mac[1] = 0xd0;\r\n            mac[2] = 0x74;\r\n        }\r\n        else {\r\n            loader.error(\"Unknown OUI\");\r\n        }\r\n        mac[3] = (mac1 >> 8) & 0xff;\r\n        mac[4] = mac1 & 0xff;\r\n        mac[5] = (mac0 >> 24) & 0xff;\r\n        return (this._d2h(mac[0]) +\r\n            \":\" +\r\n            this._d2h(mac[1]) +\r\n            \":\" +\r\n            this._d2h(mac[2]) +\r\n            \":\" +\r\n            this._d2h(mac[3]) +\r\n            \":\" +\r\n            this._d2h(mac[4]) +\r\n            \":\" +\r\n            this._d2h(mac[5]));\r\n    }\r\n    getEraseSize(offset, size) {\r\n        return size;\r\n    }\r\n}\r\n"],"names":[],"version":3,"file":"esp8266.f41c8fd5.js.map"}